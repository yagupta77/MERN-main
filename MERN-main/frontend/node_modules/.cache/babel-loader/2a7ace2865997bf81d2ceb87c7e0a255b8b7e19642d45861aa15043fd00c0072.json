{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\mern\\\\frontend\\\\src\\\\components\\\\Apply.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Apply = () => {\n  _s();\n  const [resume, setResume] = useState(null); // State to hold the resume file\n  const [loading, setLoading] = useState(false); // State to manage loading status\n  const [error, setError] = useState(null); // State to manage error messages\n  const [success, setSuccess] = useState(null); // State to manage success messages\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent the default form submission\n\n    if (!resume) {\n      console.error('No resume file selected'); // Log if no file is selected\n      return;\n    }\n    const formData = new FormData(); // Create a new FormData object\n    formData.append('resume', resume); // Append the resume file to FormData\n\n    // Check if token exists\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setError('No authorization token found. Please log in.');\n      return;\n    }\n    setLoading(true); // Set loading to true\n    setError(null); // Reset error state\n    setSuccess(null); // Reset success state\n\n    try {\n      await axios.post('http://localhost:5000/api/applications', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          // Set the content type for file upload\n          Authorization: `Bearer ${token}` // Correctly formatted Authorization header\n        }\n      });\n      // Handle success (e.g., show a success message)\n      setSuccess('Application submitted successfully!');\n    } catch (error) {\n      console.error('Application submission failed', error.response ? error.response.data : error.message); // Log any errors\n      setError('Application submission failed. Please try again.'); // Set error message\n    } finally {\n      setLoading(false); // Set loading to false\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setResume(e.target.files[0]) // Set the resume file on change\n        ,\n        required: true // Make this field required\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: \"Submit Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Submitting your application...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }, this), \" \", error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this), \" \", success && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Apply, \"MwxiUhHe2ndWlngzRa7+QugHgPU=\");\n_c = Apply;\nexport default Apply;\nvar _c;\n$RefreshReg$(_c, \"Apply\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Apply","_s","resume","setResume","loading","setLoading","error","setError","success","setSuccess","handleSubmit","e","preventDefault","console","formData","FormData","append","token","localStorage","getItem","post","headers","Authorization","response","data","message","children","onSubmit","type","onChange","target","files","required","fileName","_jsxFileName","lineNumber","columnNumber","disabled","style","color","_c","$RefreshReg$"],"sources":["C:/Users/shiva/mern/frontend/src/components/Apply.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Apply = () => {\r\n  const [resume, setResume] = useState(null); // State to hold the resume file\r\n  const [loading, setLoading] = useState(false); // State to manage loading status\r\n  const [error, setError] = useState(null); // State to manage error messages\r\n  const [success, setSuccess] = useState(null); // State to manage success messages\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault(); // Prevent the default form submission\r\n\r\n    if (!resume) {\r\n      console.error('No resume file selected'); // Log if no file is selected\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData(); // Create a new FormData object\r\n    formData.append('resume', resume); // Append the resume file to FormData\r\n\r\n    // Check if token exists\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      setError('No authorization token found. Please log in.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true); // Set loading to true\r\n    setError(null); // Reset error state\r\n    setSuccess(null); // Reset success state\r\n\r\n    try {\r\n      await axios.post('http://localhost:5000/api/applications', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data', // Set the content type for file upload\r\n          Authorization: `Bearer ${token}` // Correctly formatted Authorization header\r\n        }\r\n      });\r\n      // Handle success (e.g., show a success message)\r\n      setSuccess('Application submitted successfully!');\r\n    } catch (error) {\r\n      console.error('Application submission failed', error.response ? error.response.data : error.message); // Log any errors\r\n      setError('Application submission failed. Please try again.'); // Set error message\r\n    } finally {\r\n      setLoading(false); // Set loading to false\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"file\"\r\n          onChange={(e) => setResume(e.target.files[0])} // Set the resume file on change\r\n          required // Make this field required\r\n        />\r\n        <button type=\"submit\" disabled={loading}>Submit Application</button>\r\n      </form>\r\n      {loading && <p>Submitting your application...</p>} {/* Loading message */}\r\n      {error && <p style={{ color: 'red' }}>{error}</p>} {/* Error message */}\r\n      {success && <p style={{ color: 'green' }}>{success}</p>} {/* Success message */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Apply;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}