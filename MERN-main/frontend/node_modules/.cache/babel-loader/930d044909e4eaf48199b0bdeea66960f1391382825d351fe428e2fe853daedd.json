{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\mern\\\\frontend\\\\src\\\\components\\\\ApproverDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApproverDashboard = ({\n  token\n}) => {\n  _s();\n  const [applications, setApplications] = useState([]); // State to hold applications\n  const [error, setError] = useState(''); // State for error messages\n\n  useEffect(() => {\n    const fetchApprovedApplications = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/applications/approved', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          } // Use the passed token\n        });\n        setApplications(response.data); // Set the approved applications\n      } catch (error) {\n        console.error('Error fetching approved applications:', error);\n        setError('Error fetching approved applications'); // Handle error state\n      }\n    };\n    fetchApprovedApplications();\n  }, [token]);\n  const handleApprove = async applicationId => {\n    const token = localStorage.getItem('token'); // Retrieve the token from local storage\n    try {\n      await axios.put(`http://localhost:5000/api/applications/${applicationId}/approve`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        } // Include the token in the header\n      });\n      // Refresh the applications list after approval\n      setApplications(applications.filter(app => app._id !== applicationId));\n      alert('Application approved successfully.');\n    } catch (error) {\n      console.error('Error approving application:', error);\n      setError('Failed to approve application.');\n    }\n  };\n  const handleReject = async applicationId => {\n    const token = localStorage.getItem('token'); // Retrieve the token from local storage\n    try {\n      await axios.put(`http://localhost:5000/api/applications/${applicationId}/reject`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        } // Include the token in the header\n      });\n      // Refresh the applications list after rejection\n      setApplications(applications.filter(app => app._id !== applicationId));\n      alert('Application rejected successfully.');\n    } catch (error) {\n      console.error('Error rejecting application:', error);\n      setError('Failed to reject application.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Approver Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 23\n    }, this), applications.length > 0 ? applications.map(app => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Application ID: \", app._id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleApprove(app._id),\n        children: \"Approve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleReject(app._id),\n        children: \"Reject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this)]\n    }, app._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No applications to review.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(ApproverDashboard, \"DFvcgEh4DdUMmZfE1q2e3EpL0s4=\");\n_c = ApproverDashboard;\nexport default ApproverDashboard;\nvar _c;\n$RefreshReg$(_c, \"ApproverDashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ApproverDashboard","token","_s","applications","setApplications","error","setError","fetchApprovedApplications","response","get","headers","Authorization","data","console","handleApprove","applicationId","localStorage","getItem","put","filter","app","_id","alert","handleReject","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/shiva/mern/frontend/src/components/ApproverDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ApproverDashboard = ({ token }) => {\r\n    const [applications, setApplications] = useState([]); // State to hold applications\r\n    const [error, setError] = useState(''); // State for error messages\r\n\r\n    useEffect(() => {\r\n        const fetchApprovedApplications = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/applications/approved', {\r\n                    headers: { Authorization: `Bearer ${token}` } // Use the passed token\r\n                });\r\n                setApplications(response.data); // Set the approved applications\r\n            } catch (error) {\r\n                console.error('Error fetching approved applications:', error);\r\n                setError('Error fetching approved applications'); // Handle error state\r\n            }\r\n        };\r\n        fetchApprovedApplications();\r\n    }, [token]);\r\n    const handleApprove = async (applicationId) => {\r\n        const token = localStorage.getItem('token'); // Retrieve the token from local storage\r\n        try {\r\n            await axios.put(`http://localhost:5000/api/applications/${applicationId}/approve`, {}, {\r\n                headers: { Authorization: `Bearer ${token}` } // Include the token in the header\r\n            });\r\n            // Refresh the applications list after approval\r\n            setApplications(applications.filter(app => app._id !== applicationId));\r\n            alert('Application approved successfully.');\r\n        } catch (error) {\r\n            console.error('Error approving application:', error);\r\n            setError('Failed to approve application.');\r\n        }\r\n    };\r\n    \r\n    const handleReject = async (applicationId) => {\r\n        const token = localStorage.getItem('token'); // Retrieve the token from local storage\r\n        try {\r\n            await axios.put(`http://localhost:5000/api/applications/${applicationId}/reject`, {}, {\r\n                headers: { Authorization: `Bearer ${token}` } // Include the token in the header\r\n            });\r\n            // Refresh the applications list after rejection\r\n            setApplications(applications.filter(app => app._id !== applicationId));\r\n            alert('Application rejected successfully.');\r\n        } catch (error) {\r\n            console.error('Error rejecting application:', error);\r\n            setError('Failed to reject application.');\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            <h1>Approver Dashboard</h1>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            {applications.length > 0 ? (\r\n                applications.map(app => (\r\n                    <div key={app._id}>\r\n                        <h3>Application ID: {app._id}</h3>\r\n                        {/* If details field is removed, comment or remove this line */}\r\n                        {/* <p>{app.details}</p> */}\r\n                        <button onClick={() => handleApprove(app._id)}>Approve</button>\r\n                        <button onClick={() => handleReject(app._id)}>Reject</button>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>No applications to review.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ApproverDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}