{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\mern\\\\frontend\\\\src\\\\components\\\\ApproverDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApproverDashboard = ({\n  token\n}) => {\n  _s();\n  const [applications, setApplications] = useState([]); // State to hold approved applications\n  const [error, setError] = useState(''); // State for error messages\n  const [loading, setLoading] = useState(false); // State for loading indicator\n\n  const fetchApprovedApplications = async () => {\n    setLoading(true); // Set loading to true when fetching data\n    try {\n      const response = await axios.get('http://localhost:5000/api/applications/approved', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        } // Use the passed token\n      });\n      console.log('Approved applications fetched:', response.data); // Log the fetched applications\n      setApplications(response.data); // Set the approved applications\n    } catch (error) {\n      console.error('Error fetching approved applications:', error);\n      setError('Error fetching approved applications. Please try again later.'); // Handle error state\n    } finally {\n      setLoading(false); // Set loading to false after fetching\n    }\n  };\n  useEffect(() => {\n    fetchApprovedApplications();\n  }, [token]);\n  const handleReject = async applicationId => {\n    if (window.confirm('Are you sure you want to reject this application?')) {\n      try {\n        await axios.put(`http://localhost:5000/api/applications/${applicationId}/reject`, {}, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        alert('Application rejected successfully.');\n        fetchApprovedApplications(); // Refresh the applications list after rejection\n      } catch (error) {\n        console.error('Error rejecting application:', error);\n        setError('Failed to reject application. Please try again later.');\n      }\n    }\n  };\n  const downloadResume = resumeBuffer => {\n    const blob = new Blob([resumeBuffer.data], {\n      type: 'application/pdf'\n    }); // Adjust the MIME type as necessary\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'resume.pdf'; // Set the default file name\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Approved Applications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading applications...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }, this), \" \", error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 23\n    }, this), applications.length > 0 ? applications.map(app => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Application ID: \", app._id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Initiator ID: \", app.initiatorId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Status: selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Remarks:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: app.remarks.map((remark, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: remark.remark\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleApprove(app._id),\n        children: \"Approve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleReject(app._id),\n        children: \"Reject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => downloadResume(app.resume),\n        children: \"Download Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this)]\n    }, app._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No approved applications found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this) // Message when no approved applications are available\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(ApproverDashboard, \"TWHtl38bnsRyXOLVpoErCvFAzkM=\");\n_c = ApproverDashboard;\nexport default ApproverDashboard;\nvar _c;\n$RefreshReg$(_c, \"ApproverDashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ApproverDashboard","token","_s","applications","setApplications","error","setError","loading","setLoading","fetchApprovedApplications","response","get","headers","Authorization","console","log","data","handleReject","applicationId","window","confirm","put","alert","downloadResume","resumeBuffer","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","app","_id","initiatorId","remarks","remark","index","onClick","handleApprove","resume","_c","$RefreshReg$"],"sources":["C:/Users/shiva/mern/frontend/src/components/ApproverDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ApproverDashboard = ({ token }) => {\r\n    const [applications, setApplications] = useState([]); // State to hold approved applications\r\n    const [error, setError] = useState(''); // State for error messages\r\n    const [loading, setLoading] = useState(false); // State for loading indicator\r\n\r\n    const fetchApprovedApplications = async () => {\r\n        setLoading(true); // Set loading to true when fetching data\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/api/applications/approved', {\r\n                headers: { Authorization: `Bearer ${token}` } // Use the passed token\r\n            });\r\n            console.log('Approved applications fetched:', response.data); // Log the fetched applications\r\n            setApplications(response.data); // Set the approved applications\r\n        } catch (error) {\r\n            console.error('Error fetching approved applications:', error);\r\n            setError('Error fetching approved applications. Please try again later.'); // Handle error state\r\n        } finally {\r\n            setLoading(false); // Set loading to false after fetching\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchApprovedApplications();\r\n    }, [token]);\r\n \r\n\r\n    const handleReject = async (applicationId) => {\r\n        if (window.confirm('Are you sure you want to reject this application?')) {\r\n            try {\r\n                await axios.put(`http://localhost:5000/api/applications/${applicationId}/reject`, {}, {\r\n                    headers: { Authorization: `Bearer ${token}` }\r\n                });\r\n                alert('Application rejected successfully.');\r\n                fetchApprovedApplications(); // Refresh the applications list after rejection\r\n            } catch (error) {\r\n                console.error('Error rejecting application:', error);\r\n                setError('Failed to reject application. Please try again later.');\r\n            }\r\n        }\r\n    };\r\n\r\n    const downloadResume = (resumeBuffer) => {\r\n        const blob = new Blob([resumeBuffer.data], { type: 'application/pdf' }); // Adjust the MIME type as necessary\r\n        const url = URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        a.href = url;\r\n        a.download = 'resume.pdf'; // Set the default file name\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        document.body.removeChild(a);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Approved Applications</h1>\r\n            {loading && <p>Loading applications...</p>} {/* Loading indicator */}\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            {applications.length > 0 ? (\r\n                applications.map(app => (\r\n                    <div key={app._id}>\r\n                        <h3>Application ID: {app._id}</h3>\r\n                        <p>Initiator ID: {app.initiatorId}</p>\r\n                        <p>Status: selected</p> {/* Hardcoded status */}\r\n                        <p>Remarks:</p>\r\n                        <ul>\r\n                            {app.remarks.map((remark, index) => (\r\n                                <li key={index}>{remark.remark}</li>\r\n                            ))}\r\n                        </ul>\r\n                        {/* Approve and Reject buttons */}\r\n                        <button onClick={() => handleApprove(app._id)}>Approve</button>\r\n                        <button onClick={() => handleReject(app._id)}>Reject</button>\r\n                        {/* Download Resume button */}\r\n                        <button onClick={() => downloadResume(app.resume)}>Download Resume</button>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>No approved applications found.</p> // Message when no approved applications are available\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ApproverDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}