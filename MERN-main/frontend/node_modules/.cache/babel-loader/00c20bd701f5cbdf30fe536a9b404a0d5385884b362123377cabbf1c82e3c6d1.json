{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\mern\\\\frontend\\\\src\\\\components\\\\ApproverDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApproverDashboard = ({\n  token\n}) => {\n  _s();\n  const [applications, setApplications] = useState([]); // State to hold approved applications\n  const [error, setError] = useState(''); // State for error messages\n\n  const fetchApprovedApplications = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/applications/approved', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        } // Use the passed token\n      });\n      console.log('Approved applications fetched:', response.data); // Log the fetched applications\n      setApplications(response.data); // Set the approved applications\n    } catch (error) {\n      console.error('Error fetching approved applications:', error);\n      setError('Error fetching approved applications'); // Handle error state\n    }\n  };\n  useEffect(() => {\n    fetchApprovedApplications();\n  }, [token]);\n  const handleApprove = async applicationId => {\n    try {\n      await axios.put(`http://localhost:5000/api/applications/${applicationId}/approve`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('Application approved successfully.');\n      fetchApprovedApplications(); // Refresh the applications list after approval\n    } catch (error) {\n      console.error('Error approving application:', error);\n      setError('Failed to approve application.');\n    }\n  };\n  const handleReject = async applicationId => {\n    try {\n      await axios.put(`http://localhost:5000/api/applications/${applicationId}/reject`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('Application rejected successfully.');\n      fetchApprovedApplications(); // Refresh the applications list after rejection\n    } catch (error) {\n      console.error('Error rejecting application:', error);\n      setError('Failed to reject application.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Approved Applications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 23\n    }, this), applications.length > 0 ? applications.map(app => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Application ID: \", app._id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Initiator ID: \", app.initiatorId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Status: selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Remarks:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: app.remarks.map((remark, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: remark.remark\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleApprove(app._id),\n        children: \"Approve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleReject(app._id),\n        children: \"Reject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => downloadResume(app.resume),\n        children: \"Download Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this)]\n    }, app._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No approved applications found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this) // Message when no approved applications are available\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n// Function to handle resume download\n_s(ApproverDashboard, \"DFvcgEh4DdUMmZfE1q2e3EpL0s4=\");\n_c = ApproverDashboard;\nconst downloadResume = resumeBuffer => {\n  const blob = new Blob([resumeBuffer.data], {\n    type: 'application/pdf'\n  }); // Adjust the MIME type as necessary\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = 'resume.pdf'; // Set the default file name\n  document.body.appendChild(a);\n  a.click();\n  a.click();\n  document.body.removeChild(a);\n};\nexport default ApproverDashboard;\nvar _c;\n$RefreshReg$(_c, \"ApproverDashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ApproverDashboard","token","_s","applications","setApplications","error","setError","fetchApprovedApplications","response","get","headers","Authorization","console","log","data","handleApprove","applicationId","put","alert","handleReject","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","app","_id","initiatorId","remarks","remark","index","onClick","downloadResume","resume","_c","resumeBuffer","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","$RefreshReg$"],"sources":["C:/Users/shiva/mern/frontend/src/components/ApproverDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ApproverDashboard = ({ token }) => {\r\n    const [applications, setApplications] = useState([]); // State to hold approved applications\r\n    const [error, setError] = useState(''); // State for error messages\r\n\r\n    const fetchApprovedApplications = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/api/applications/approved', {\r\n                headers: { Authorization: `Bearer ${token}` } // Use the passed token\r\n            });\r\n            console.log('Approved applications fetched:', response.data); // Log the fetched applications\r\n            setApplications(response.data); // Set the approved applications\r\n        } catch (error) {\r\n            console.error('Error fetching approved applications:', error);\r\n            setError('Error fetching approved applications'); // Handle error state\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchApprovedApplications();\r\n    }, [token]);\r\n\r\n    const handleApprove = async (applicationId) => {\r\n        try {\r\n            await axios.put(`http://localhost:5000/api/applications/${applicationId}/approve`, {}, {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            });\r\n            alert('Application approved successfully.');\r\n            fetchApprovedApplications(); // Refresh the applications list after approval\r\n        } catch (error) {\r\n            console.error('Error approving application:', error);\r\n            setError('Failed to approve application.');\r\n        }\r\n    };\r\n\r\n    const handleReject = async (applicationId) => {\r\n        try {\r\n            await axios.put(`http://localhost:5000/api/applications/${applicationId}/reject`, {}, {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            });\r\n            alert('Application rejected successfully.');\r\n            fetchApprovedApplications(); // Refresh the applications list after rejection\r\n        } catch (error) {\r\n            console.error('Error rejecting application:', error);\r\n            setError('Failed to reject application.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Approved Applications</h1>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            {applications.length > 0 ? (\r\n                applications.map(app => (\r\n                    <div key={app._id}>\r\n                        <h3>Application ID: {app._id}</h3>\r\n                        <p>Initiator ID: {app.initiatorId}</p>\r\n                        <p>Status: selected</p> {/* Hardcoded status */}\r\n                        <p>Remarks:</p>\r\n                        <ul>\r\n                            {app.remarks.map((remark, index) => (\r\n                                <li key={index}>{remark.remark}</li>\r\n                            ))}\r\n                        </ul>\r\n                        {/* Approve and Reject buttons */}\r\n                        <button onClick={() => handleApprove(app._id)}>Approve</button>\r\n                        <button onClick={() => handleReject(app._id)}>Reject</button>\r\n                        {/* If you want to display the resume, you can add a link or button to download it */}\r\n                        <button onClick={() => downloadResume(app.resume)}>Download Resume</button>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>No approved applications found.</p> // Message when no approved applications are available\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n// Function to handle resume download\r\nconst downloadResume = (resumeBuffer) => {\r\n    const blob = new Blob([resumeBuffer.data], { type: 'application/pdf' }); // Adjust the MIME type as necessary\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'resume.pdf'; // Set the default file name\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    a.click();\r\n    document.body.removeChild(a);\r\n};\r\n\r\nexport default ApproverDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}