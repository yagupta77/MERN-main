{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\mern\\\\frontend\\\\src\\\\components\\\\Notifications.js\",\n  _s = $RefreshSig$();\n// src/components/Notifications.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notifications = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchNotifications = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/notifications', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        setNotifications(response.data);\n      } catch (err) {\n        setError('Failed to fetch notifications');\n      }\n    };\n    fetchNotifications();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notifications.map((notification, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: notification.message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(Notifications, \"pN6uUe2w5G4jdqr3kMPPd2yL/7I=\");\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Notifications","_s","notifications","setNotifications","error","setError","fetchNotifications","response","get","headers","Authorization","localStorage","getItem","data","err","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","map","notification","index","message","_c","$RefreshReg$"],"sources":["C:/Users/shiva/mern/frontend/src/components/Notifications.js"],"sourcesContent":["// src/components/Notifications.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Notifications = () => {\r\n    const [notifications, setNotifications] = useState([]);\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchNotifications = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/notifications', {\r\n                    headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n                });\r\n                setNotifications(response.data);\r\n            } catch (err) {\r\n                setError('Failed to fetch notifications');\r\n            }\r\n        };\r\n\r\n        fetchNotifications();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Notifications</h1>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            <ul>\r\n                {notifications.map((notification, index) => (\r\n                    <li key={index}>{notification.message}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notifications;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ,MAAMW,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,yCAAyC,EAAE;UACxEC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;UAAG;QACxE,CAAC,CAAC;QACFT,gBAAgB,CAACI,QAAQ,CAACM,IAAI,CAAC;MACnC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVT,QAAQ,CAAC,+BAA+B,CAAC;MAC7C;IACJ,CAAC;IAEDC,kBAAkB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBf,KAAK,iBAAIL,OAAA;MAAGqB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAEX;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDpB,OAAA;MAAAgB,QAAA,EACKb,aAAa,CAACoB,GAAG,CAAC,CAACC,YAAY,EAAEC,KAAK,kBACnCzB,OAAA;QAAAgB,QAAA,EAAiBQ,YAAY,CAACE;MAAO,GAA5BD,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA4B,CAC7C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAClB,EAAA,CA9BID,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AAgCnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}