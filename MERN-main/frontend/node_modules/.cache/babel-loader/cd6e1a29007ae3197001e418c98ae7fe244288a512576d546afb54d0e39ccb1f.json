{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\mern\\\\frontend\\\\src\\\\components\\\\JobSearch.js\",\n  _s = $RefreshSig$();\n// src/components/JobSearch.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobSearch = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredJobs, setFilteredJobs] = useState([]); // State for filtered jobs\n  const navigate = useNavigate(); // Initialize useNavigate\n\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/jobs'); // Ensure this matches your backend route\n        setJobs(response.data);\n        setFilteredJobs(response.data); // Initially set filtered jobs to all jobs\n      } catch (error) {\n        console.error('Error fetching jobs:', error);\n      }\n    };\n    fetchJobs();\n  }, []);\n  const handleSearch = () => {\n    // Filter jobs based on searchTerm\n    const filtered = jobs.filter(job => job.title.toLowerCase().includes(searchTerm.toLowerCase()));\n    setFilteredJobs(filtered); // Update filtered jobs state\n  };\n  const handleApply = jobId => {\n    // Navigate to the application page for the selected job\n    navigate(`/apply/${jobId}`); // Adjust the route as necessary\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Job Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for jobs...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredJobs.length > 0 ? filteredJobs.map(job => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [job.title, \" - \", job.company, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleApply(job._id),\n          children: \"Apply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, this), \" \"]\n      }, job._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No jobs found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this) // Message when no jobs match the search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(JobSearch, \"X/5qbw7rcuf9ydh2dNIEjjy7v4k=\", false, function () {\n  return [useNavigate];\n});\n_c = JobSearch;\nexport default JobSearch;\nvar _c;\n$RefreshReg$(_c, \"JobSearch\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","JobSearch","_s","jobs","setJobs","searchTerm","setSearchTerm","filteredJobs","setFilteredJobs","navigate","fetchJobs","response","get","data","error","console","handleSearch","filtered","filter","job","title","toLowerCase","includes","handleApply","jobId","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","length","map","company","_id","_c","$RefreshReg$"],"sources":["C:/Users/shiva/mern/frontend/src/components/JobSearch.js"],"sourcesContent":["// src/components/JobSearch.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\r\n\r\nconst JobSearch = () => {\r\n    const [jobs, setJobs] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [filteredJobs, setFilteredJobs] = useState([]); // State for filtered jobs\r\n    const navigate = useNavigate(); // Initialize useNavigate\r\n\r\n    useEffect(() => {\r\n        const fetchJobs = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/jobs'); // Ensure this matches your backend route\r\n                setJobs(response.data);\r\n                setFilteredJobs(response.data); // Initially set filtered jobs to all jobs\r\n            } catch (error) {\r\n                console.error('Error fetching jobs:', error);\r\n            }\r\n        };\r\n\r\n        fetchJobs();\r\n    }, []);\r\n\r\n    const handleSearch = () => {\r\n        // Filter jobs based on searchTerm\r\n        const filtered = jobs.filter(job => \r\n            job.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n        );\r\n        setFilteredJobs(filtered); // Update filtered jobs state\r\n    };\r\n\r\n    const handleApply = (jobId) => {\r\n        // Navigate to the application page for the selected job\r\n        navigate(`/apply/${jobId}`); // Adjust the route as necessary\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Job Search</h1>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Search for jobs...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n            />\r\n            <button onClick={handleSearch}>Search</button>\r\n            <ul>\r\n                {filteredJobs.length > 0 ? (\r\n                    filteredJobs.map((job) => (\r\n                        <li key={job._id}>\r\n                            {job.title} - {job.company}\r\n                            <button onClick={() => handleApply(job._id)}>Apply</button> {/* Apply button */}\r\n                        </li>\r\n                    ))\r\n                ) : (\r\n                    <li>No jobs found</li> // Message when no jobs match the search\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JobSearch;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}