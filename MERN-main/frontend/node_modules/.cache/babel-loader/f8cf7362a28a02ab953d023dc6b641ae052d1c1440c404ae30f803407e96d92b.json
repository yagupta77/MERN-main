{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\mern\\\\frontend\\\\src\\\\components\\\\Review.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Review = () => {\n  _s();\n  const [applications, setApplications] = useState([]); // State to hold applications\n  const [selectedApplication, setSelectedApplication] = useState(null); // State for the selected application\n  const [remark, setRemark] = useState(''); // State for the remark input\n  const [status, setStatus] = useState(''); // State for the selected action (selected/unselected)\n  const [error, setError] = useState(''); // State for error messages\n  const [loading, setLoading] = useState(true); // Loading state\n  const [successMessage, setSuccessMessage] = useState(''); // State for success messages\n\n  // Fetch applications when the component mounts\n  useEffect(() => {\n    const fetchApplications = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/applications', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        setApplications(response.data); // Set applications from the response\n      } catch (err) {\n        setError('Error fetching applications'); // Set error message if fetching fails\n      } finally {\n        setLoading(false); // Set loading to false after fetching\n      }\n    };\n    fetchApplications();\n  }, []);\n  const handleReview = async applicationId => {\n    try {\n      if (status === 'selected') {\n        // Send to approver\n        await axios.put(`http://localhost:5000/api/applications/${applicationId}/send-to-approver`, {\n          details: selectedApplication.details,\n          // Include the details\n          remark\n        }, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        setSuccessMessage('Application sent to approver successfully!'); // Success message\n      } else if (status === 'unselected') {\n        // Provide remark to user\n        await axios.put(`http://localhost:5000/api/applications/${applicationId}/remark`, {\n          remark\n        }, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        setSuccessMessage('Remark submitted successfully!'); // Success message\n      }\n\n      // Remove the reviewed application from the state\n      setApplications(applications.filter(app => app._id !== applicationId));\n\n      // Clear the form\n      setRemark('');\n      setStatus('');\n      setSelectedApplication(null);\n    } catch (err) {\n      if (err.response && err.response.status === 403) {\n        setError('You do not have permission to perform this action.'); // Handle permission error\n      } else {\n        setError('Error submitting review'); // Handle other errors\n      }\n    }\n  };\n  const handleDelete = async applicationId => {\n    try {\n      await axios.delete(`http://localhost:5000/api/applications/${applicationId}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setSuccessMessage('Application deleted successfully!'); // Success message\n\n      // Remove the deleted application from the state\n      setApplications(applications.filter(app => app._id !== applicationId));\n\n      // Clear the form\n      setRemark('');\n      setStatus('');\n      setSelectedApplication(null);\n    } catch (err) {\n      setError('Error deleting application'); // Handle error\n    }\n  };\n\n  // Loading state\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading applications...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 16\n    }, this); // Loading message\n  }\n  /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Review Applications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), applications.length > 0 ? applications.map(app => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Application ID: \", app._id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedApplication(app),\n        children: \"Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }, this)]\n    }, app._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No applications to review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this) // Message when no applications are available\n    , selectedApplication && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Review Application ID: \", selectedApplication._id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: remark,\n        onChange: e => setRemark(e.target.value),\n        placeholder: \"Enter remark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setStatus(e.target.value),\n        value: status,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"selected\",\n          children: \"Select (Send to Approver)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"unselected\",\n          children: \"Unselect (Provide Remark)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleReview(selectedApplication._id),\n        children: \"Submit Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 23\n    }, this), \" \", successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 32\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n_s(Review, \"3GjabL33nhJx+wO6a7xJOPUXTDY=\");\n_c = Review;\nexport default Review;\nvar _c;\n$RefreshReg$(_c, \"Review\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Review","_s","applications","setApplications","selectedApplication","setSelectedApplication","remark","setRemark","status","setStatus","error","setError","loading","setLoading","successMessage","setSuccessMessage","fetchApplications","response","get","headers","Authorization","localStorage","getItem","data","err","handleReview","applicationId","put","details","filter","app","_id","handleDelete","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onClick","value","onChange","e","target","placeholder","style","color","_c","$RefreshReg$"],"sources":["C:/Users/shiva/mern/frontend/src/components/Review.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Review = () => {\r\n    const [applications, setApplications] = useState([]); // State to hold applications\r\n    const [selectedApplication, setSelectedApplication] = useState(null); // State for the selected application\r\n    const [remark, setRemark] = useState(''); // State for the remark input\r\n    const [status, setStatus] = useState(''); // State for the selected action (selected/unselected)\r\n    const [error, setError] = useState(''); // State for error messages\r\n    const [loading, setLoading] = useState(true); // Loading state\r\n    const [successMessage, setSuccessMessage] = useState(''); // State for success messages\r\n\r\n    // Fetch applications when the component mounts\r\n    useEffect(() => {\r\n        const fetchApplications = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/applications', {\r\n                    headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n                });\r\n                setApplications(response.data); // Set applications from the response\r\n            } catch (err) {\r\n                setError('Error fetching applications'); // Set error message if fetching fails\r\n            } finally {\r\n                setLoading(false); // Set loading to false after fetching\r\n            }\r\n        };\r\n\r\n        fetchApplications();\r\n    }, []);\r\n\r\n    const handleReview = async (applicationId) => {\r\n        try {\r\n            if (status === 'selected') {\r\n                // Send to approver\r\n                await axios.put(`http://localhost:5000/api/applications/${applicationId}/send-to-approver`, {\r\n                    details: selectedApplication.details, // Include the details\r\n                    remark\r\n                }, {\r\n                    headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n                });\r\n                setSuccessMessage('Application sent to approver successfully!'); // Success message\r\n            } else if (status === 'unselected') {\r\n                // Provide remark to user\r\n                await axios.put(`http://localhost:5000/api/applications/${applicationId}/remark`, {\r\n                    remark\r\n                }, {\r\n                    headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n                });\r\n                setSuccessMessage('Remark submitted successfully!'); // Success message\r\n            }\r\n\r\n            // Remove the reviewed application from the state\r\n            setApplications(applications.filter(app => app._id !== applicationId));\r\n\r\n            // Clear the form\r\n            setRemark('');\r\n            setStatus('');\r\n            setSelectedApplication(null);\r\n        } catch (err) {\r\n            if (err.response && err.response.status === 403) {\r\n                setError('You do not have permission to perform this action.'); // Handle permission error\r\n            } else {\r\n                setError('Error submitting review'); // Handle other errors\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (applicationId) => {\r\n        try {\r\n            await axios.delete(`http://localhost:5000/api/applications/${applicationId}`, {\r\n                headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n            });\r\n            setSuccessMessage('Application deleted successfully!'); // Success message\r\n\r\n            // Remove the deleted application from the state\r\n            setApplications(applications.filter(app => app._id !== applicationId));\r\n\r\n            // Clear the form\r\n            setRemark('');\r\n            setStatus('');\r\n            setSelectedApplication(null);\r\n        } catch (err) {\r\n            setError('Error deleting application'); // Handle error\r\n        }\r\n    };\r\n\r\n    // Loading state\r\n    if (loading) {\r\n        return <p>Loading applications...</p>; // Loading message\r\n    }\r\n\r\n    \r\n        <div>\r\n            <h1>Review Applications</h1>\r\n            {applications.length > 0 ? (\r\n                applications.map(app => (\r\n                    <div key={app._id}>\r\n                        <h3>Application ID: {app._id}</h3>\r\n\r\n                        <button onClick={() => setSelectedApplication(app)}>Review</button>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>No applications to review</p> // Message when no applications are available\r\n            )}\r\n            {selectedApplication && (\r\n                <div>\r\n                    <h2>Review Application ID: {selectedApplication._id}</h2>\r\n                    <textarea \r\n                        value={remark} \r\n                        onChange={(e) => setRemark(e.target.value)} \r\n                        placeholder=\"Enter remark\" \r\n                    />\r\n                    <select onChange={(e) => setStatus(e.target.value)} value={status}>\r\n                        <option value=\"\">Select Action</option>\r\n                        <option value=\"selected\">Select (Send to Approver)</option>\r\n                        <option value=\"unselected\">Unselect (Provide Remark)</option>\r\n                    </select>\r\n                    <button onClick={() => handleReview(selectedApplication._id)}>Submit Review</button>\r\n                </div>\r\n            )}\r\n            {error && <p style={{ color: 'red' }}>{error}</p>} {/* Display error message */}\r\n            {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>} {/* Display success message */}\r\n        </div>\r\n};\r\n\r\nexport default Review;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}