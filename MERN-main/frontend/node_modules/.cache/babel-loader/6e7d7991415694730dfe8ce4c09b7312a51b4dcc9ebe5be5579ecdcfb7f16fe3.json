{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\mern\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n// src/components/Login.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState(''); // State for username\n  const [email, setEmail] = useState(''); // State for email\n  const [password, setPassword] = useState(''); // State for password\n  const [error, setError] = useState(''); // State for error messages\n  const [loading, setLoading] = useState(false); // Loading state\n  const navigate = useNavigate(); // Initialize useNavigate\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    setLoading(true); // Set loading to true\n    setError(''); // Reset error message\n\n    // Client-side validation\n    if (!username || !email || !password) {\n      setError('All fields are required');\n      setLoading(false); // Reset loading state\n      return;\n    }\n    try {\n      // Log the data being sent\n      console.log({\n        username,\n        email,\n        password\n      });\n\n      // Send login request to the server\n      const response = await axios.post('http://localhost:5000/api/auth/login', {\n        username,\n        email,\n        password\n      });\n      localStorage.setItem('token', response.data.token); // Store the token in local storage\n\n      // Check the user's role and navigate accordingly\n      const role = response.data.role; // Assuming the role is returned in the response\n      if (role === 'reviewer') {\n        navigate('/reviewer-dashboard'); // Redirect to reviewer dashboard\n      } else if (role === 'approver') {\n        navigate('/approver-dashboard'); // Redirect to approver dashboard\n      } else {\n        navigate('/user-dashboard'); // Redirect to user dashboard for regular users\n      }\n    } catch (error) {\n      console.error('Login failed', error);\n      setError('Login failed. Please check your username, email, and password.');\n    } finally {\n      setLoading(false); // Reset loading state\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleLogin,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: loading,\n      children: loading ? 'Logging in...' : 'Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"RYnoq+biCqdqyZT50qPcHR41Qiw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Login","_s","username","setUsername","email","setEmail","password","setPassword","error","setError","loading","setLoading","navigate","handleLogin","e","preventDefault","console","log","response","post","localStorage","setItem","data","token","role","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","disabled","style","color","_c","$RefreshReg$"],"sources":["C:/Users/shiva/mern/frontend/src/components/Login.js"],"sourcesContent":["// src/components/Login.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\r\n\r\nconst Login = () => {\r\n    const [username, setUsername] = useState(''); // State for username\r\n    const [email, setEmail] = useState(''); // State for email\r\n    const [password, setPassword] = useState(''); // State for password\r\n    const [error, setError] = useState(''); // State for error messages\r\n    const [loading, setLoading] = useState(false); // Loading state\r\n    const navigate = useNavigate(); // Initialize useNavigate\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true); // Set loading to true\r\n        setError(''); // Reset error message\r\n\r\n        // Client-side validation\r\n        if (!username || !email || !password) {\r\n            setError('All fields are required');\r\n            setLoading(false); // Reset loading state\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Log the data being sent\r\n            console.log({ username, email, password });\r\n\r\n            // Send login request to the server\r\n            const response = await axios.post('http://localhost:5000/api/auth/login', { username, email, password });\r\n            localStorage.setItem('token', response.data.token); // Store the token in local storage\r\n            \r\n            // Check the user's role and navigate accordingly\r\n            const role = response.data.role; // Assuming the role is returned in the response\r\n            if (role === 'reviewer') {\r\n                navigate('/reviewer-dashboard'); // Redirect to reviewer dashboard\r\n            } else if (role === 'approver') {\r\n                navigate('/approver-dashboard'); // Redirect to approver dashboard\r\n            } else {\r\n                navigate('/user-dashboard'); // Redirect to user dashboard for regular users\r\n            }\r\n        } catch (error) {\r\n            console.error('Login failed', error);\r\n            setError('Login failed. Please check your username, email, and password.');\r\n        } finally {\r\n            setLoading(false); // Reset loading state\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleLogin}>\r\n            <h2>Login</h2>\r\n            <input \r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                required\r\n            />\r\n            <input \r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n            />\r\n            <input \r\n                type=\"password\" \r\n                placeholder=\"Password\" \r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)} \r\n                required \r\n            />\r\n            <button type=\"submit\" disabled={loading}>\r\n                {loading ? 'Logging in...' : 'Login'}\r\n            </button>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}