{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\mern\\\\frontend\\\\src\\\\components\\\\JobSearch.js\",\n  _s = $RefreshSig$();\n// src/components/JobSearch.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobSearch = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/jobs'); // Ensure this matches your backend route\n        setJobs(response.data);\n      } catch (error) {\n        console.error('Error fetching jobs:', error);\n      }\n    };\n    fetchJobs();\n  }, []);\n  const handleSearch = () => {\n    // Implement search logic here\n    // For example, filter jobs based on searchTerm\n    const filteredJobs = jobs.filter(job => job.title.toLowerCase().includes(searchTerm.toLowerCase()));\n    setJobs(filteredJobs);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Job Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for jobs...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: jobs.map(job => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [job.title, \" - \", job.company]\n      }, job._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(JobSearch, \"ElRKo5bt5ZNIjTUsb3a9YQgqlvM=\");\n_c = JobSearch;\nexport default JobSearch;\nvar _c;\n$RefreshReg$(_c, \"JobSearch\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","JobSearch","_s","jobs","setJobs","searchTerm","setSearchTerm","fetchJobs","response","get","data","error","console","handleSearch","filteredJobs","filter","job","title","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","company","_id","_c","$RefreshReg$"],"sources":["C:/Users/shiva/mern/frontend/src/components/JobSearch.js"],"sourcesContent":["// src/components/JobSearch.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst JobSearch = () => {\r\n    const [jobs, setJobs] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchJobs = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/jobs'); // Ensure this matches your backend route\r\n                setJobs(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching jobs:', error);\r\n            }\r\n        };\r\n\r\n        fetchJobs();\r\n    }, []);\r\n\r\n    const handleSearch = () => {\r\n        // Implement search logic here\r\n        // For example, filter jobs based on searchTerm\r\n        const filteredJobs = jobs.filter(job => \r\n            job.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n        );\r\n        setJobs(filteredJobs);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Job Search</h1>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Search for jobs...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n            />\r\n            <button onClick={handleSearch}>Search</button>\r\n            <ul>\r\n                {jobs.map((job) => (\r\n                    <li key={job._id}>{job.title} - {job.company}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JobSearch;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACZ,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,gCAAgC,CAAC,CAAC,CAAC;QACpEL,OAAO,CAACI,QAAQ,CAACE,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD;IACJ,CAAC;IAEDJ,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACvB;IACA;IACA,MAAMC,YAAY,GAAGX,IAAI,CAACY,MAAM,CAACC,GAAG,IAChCA,GAAG,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACd,UAAU,CAACa,WAAW,CAAC,CAAC,CAC7D,CAAC;IACDd,OAAO,CAACU,YAAY,CAAC;EACzB,CAAC;EAED,oBACId,OAAA;IAAAoB,QAAA,gBACIpB,OAAA;MAAAoB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBxB,OAAA;MACIyB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,oBAAoB;MAChCC,KAAK,EAAEtB,UAAW;MAClBuB,QAAQ,EAAGC,CAAC,IAAKvB,aAAa,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACFxB,OAAA;MAAQ+B,OAAO,EAAElB,YAAa;MAAAO,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9CxB,OAAA;MAAAoB,QAAA,EACKjB,IAAI,CAAC6B,GAAG,CAAEhB,GAAG,iBACVhB,OAAA;QAAAoB,QAAA,GAAmBJ,GAAG,CAACC,KAAK,EAAC,KAAG,EAACD,GAAG,CAACiB,OAAO;MAAA,GAAnCjB,GAAG,CAACkB,GAAG;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiC,CACpD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACtB,EAAA,CA3CID,SAAS;AAAAkC,EAAA,GAATlC,SAAS;AA6Cf,eAAeA,SAAS;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}