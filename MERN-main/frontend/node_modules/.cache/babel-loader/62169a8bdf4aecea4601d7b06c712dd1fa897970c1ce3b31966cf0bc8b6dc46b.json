{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\MERN-main\\\\MERN-main\\\\frontend\\\\src\\\\components\\\\ApproverDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApproverDashboard = () => {\n  _s();\n  const [approvedApplications, setApprovedApplications] = useState([]); // State to hold approved applications\n  const [pendingApplications, setPendingApplications] = useState([]); // State to hold pending applications\n  const [error, setError] = useState(''); // State for error messages\n  const [loading, setLoading] = useState(false); // State for loading indicator\n\n  const fetchApplications = async () => {\n    setLoading(true); // Set loading to true when fetching data\n    const token = localStorage.getItem('token'); // Retrieve the token\n    if (!token) {\n      console.error('No token found. User might not be logged in.');\n      setError('You need to log in to view applications.');\n      setLoading(false);\n      return; // Exit if no token is found\n    }\n    try {\n      // Fetch approved applications\n      const approvedResponse = await axios.get('http://localhost:5000/api/applications/approved', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        } // Use the retrieved token\n      });\n      console.log('Approved applications fetched:', approvedResponse.data); // Log the fetched applications\n      setApprovedApplications(approvedResponse.data); // Set the approved applications\n\n      // Fetch pending applications\n      const pendingResponse = await axios.get('http://localhost:5000/api/applications/pending', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        } // Use the retrieved token\n      });\n      console.log('Pending applications fetched:', pendingResponse.data); // Log the fetched applications\n      setPendingApplications(pendingResponse.data); // Set the pending applications\n    } catch (error) {\n      console.error('Error fetching applications:', error);\n      setError('Error fetching applications. Please try again later.'); // Handle error state\n    } finally {\n      setLoading(false); // Set loading to false after fetching\n    }\n  };\n  useEffect(() => {\n    fetchApplications(); // Fetch applications on component mount\n  }, []); // Fetch applications only once on mount\n\n  const handleApprove = async applicationId => {\n    if (window.confirm('Are you sure you want to approve this application?')) {\n      const token = localStorage.getItem('token'); // Retrieve the token again for debugging\n      console.log('Token received for approval:', token); // Debugging line\n      try {\n        await axios.put(`http://localhost:5000/api/applications/${applicationId}/approve`, {}, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        alert('Application approved successfully.');\n\n        // Remove the approved application from the pending state\n        setPendingApplications(prevApplications => prevApplications.filter(app => app._id !== applicationId)); // Update the state to remove the approved application\n\n        // Optionally, you can also fetch approved applications again to update the list\n        fetchApplications(); // Re-fetch applications to update the approved list\n      } catch (error) {\n        console.error('Error approving application:', error);\n        setError('Failed to approve application. Please try again later.');\n      }\n    }\n  };\n  const handleReject = async applicationId => {\n    if (window.confirm('Are you sure you want to reject this application?')) {\n      const token = localStorage.getItem('token'); // Retrieve the token again for debugging\n      console.log('Token received for rejection:', token); // Debugging line\n      try {\n        await axios.put(`http://localhost:5000/api/applications/${applicationId}/reject`, {}, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        alert('Application rejected successfully.');\n\n        // Remove the rejected application from the pending state\n        setPendingApplications(prevApplications => prevApplications.filter(app => app._id !== applicationId)); // Update the state to remove the rejected application\n      } catch (error) {\n        console.error('Error rejecting application:', error);\n        setError('Failed to reject application. Please try again later.');\n      }\n    }\n  };\n  const downloadResume = resumeBuffer => {\n    const blob = new Blob([resumeBuffer], {\n      type: 'application/pdf'\n    }); // Adjust the MIME type as necessary\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'resume.pdf'; // Set the default file name\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url); // Clean up the URL object\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pending Applications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading applications...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }, this), \" \", error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 23\n    }, this), pendingApplications.length > 0 ? pendingApplications.map(app => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Application ID: \", app._id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Initiator ID: \", app.initiatorId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", app.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Remarks:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: app.remarks.map((remark, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: remark.remark\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleApprove(app._id),\n        children: \"Approve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleReject(app._id),\n        children: \"Reject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => downloadResume(app.resume),\n        children: \"Download Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }, this)]\n    }, app._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No pending applications found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }, this) // Message when no pending applications are available\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n_s(ApproverDashboard, \"kl4I0rHOzs85++PPKZZxjqlZ0RU=\");\n_c = ApproverDashboard;\nexport default ApproverDashboard; // Move this line outside of the return statement\nvar _c;\n$RefreshReg$(_c, \"ApproverDashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ApproverDashboard","_s","approvedApplications","setApprovedApplications","pendingApplications","setPendingApplications","error","setError","loading","setLoading","fetchApplications","token","localStorage","getItem","console","approvedResponse","get","headers","Authorization","log","data","pendingResponse","handleApprove","applicationId","window","confirm","put","alert","prevApplications","filter","app","_id","handleReject","downloadResume","resumeBuffer","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","initiatorId","status","remarks","remark","index","onClick","resume","_c","$RefreshReg$"],"sources":["C:/Users/admin/Downloads/MERN-main/MERN-main/frontend/src/components/ApproverDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst ApproverDashboard = () => {\n    const [approvedApplications, setApprovedApplications] = useState([]); // State to hold approved applications\n    const [pendingApplications, setPendingApplications] = useState([]); // State to hold pending applications\n    const [error, setError] = useState(''); // State for error messages\n    const [loading, setLoading] = useState(false); // State for loading indicator\n\n    const fetchApplications = async () => {\n        setLoading(true); // Set loading to true when fetching data\n        const token = localStorage.getItem('token'); // Retrieve the token\n        if (!token) {\n            console.error('No token found. User might not be logged in.');\n            setError('You need to log in to view applications.');\n            setLoading(false);\n            return; // Exit if no token is found\n        }\n\n        try {\n            // Fetch approved applications\n            const approvedResponse = await axios.get('http://localhost:5000/api/applications/approved', {\n                headers: { Authorization: `Bearer ${token}` } // Use the retrieved token\n            });\n            console.log('Approved applications fetched:', approvedResponse.data); // Log the fetched applications\n            setApprovedApplications(approvedResponse.data); // Set the approved applications\n\n            // Fetch pending applications\n            const pendingResponse = await axios.get('http://localhost:5000/api/applications/pending', {\n                headers: { Authorization: `Bearer ${token}` } // Use the retrieved token\n            });\n            console.log('Pending applications fetched:', pendingResponse.data); // Log the fetched applications\n            setPendingApplications(pendingResponse.data); // Set the pending applications\n        } catch (error) {\n            console.error('Error fetching applications:', error);\n            setError('Error fetching applications. Please try again later.'); // Handle error state\n        } finally {\n            setLoading(false); // Set loading to false after fetching\n        }\n    };\n\n    useEffect(() => {\n        fetchApplications(); // Fetch applications on component mount\n    }, []); // Fetch applications only once on mount\n\n    const handleApprove = async (applicationId) => {\n        if (window.confirm('Are you sure you want to approve this application?')) {\n            const token = localStorage.getItem('token'); // Retrieve the token again for debugging\n            console.log('Token received for approval:', token); // Debugging line\n            try {\n                await axios.put(`http://localhost:5000/api/applications/${applicationId}/approve`, {}, {\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n                alert('Application approved successfully.');\n\n                // Remove the approved application from the pending state\n                setPendingApplications((prevApplications) => \n                    prevApplications.filter(app => app._id !== applicationId)\n                ); // Update the state to remove the approved application\n\n                // Optionally, you can also fetch approved applications again to update the list\n                fetchApplications(); // Re-fetch applications to update the approved list\n            } catch (error) {\n                console.error('Error approving application:', error);\n                setError('Failed to approve application. Please try again later.');\n            }\n        } \n    };\n\n    const handleReject = async (applicationId) => {\n        if (window.confirm('Are you sure you want to reject this application?')) {\n            const token = localStorage.getItem('token'); // Retrieve the token again for debugging\n            console.log('Token received for rejection:', token); // Debugging line\n            try {\n                await axios.put(`http://localhost:5000/api/applications/${applicationId}/reject`, {}, {\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n                alert('Application rejected successfully.');\n\n                // Remove the rejected application from the pending state\n                setPendingApplications((prevApplications) => \n                    prevApplications.filter(app => app._id !== applicationId)\n                ); // Update the state to remove the rejected application\n            } catch (error) {\n                console.error('Error rejecting application:', error);\n                setError('Failed to reject application. Please try again later.');\n            }\n        } \n    };\n\n    const downloadResume = (resumeBuffer) => {\n        const blob = new Blob([resumeBuffer], { type: 'application/pdf' }); // Adjust the MIME type as necessary\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'resume.pdf'; // Set the default file name\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n        URL.revokeObjectURL(url); // Clean up the URL object\n    };\n\n    return (\n        <div>\n            <h1>Pending Applications</h1>\n            {loading && <p>Loading applications...</p>} {/* Loading indicator */}\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            {pendingApplications.length > 0 ? (\n                pendingApplications.map(app => (\n                    <div key={app._id}>\n                        <h3>Application ID: {app._id}</h3>\n                        <p>Initiator ID: {app.initiatorId}</p>\n                        <p>Status: {app.status}</p>\n                        <p>Remarks:</p>\n                        <ul>\n                            {app.remarks.map((remark, index) => (\n                                <li key={index}>{remark.remark}</li>\n                            ))}\n                        </ul>\n                        {/* Approve and Reject buttons */}\n                        <button onClick={() => handleApprove(app._id)}>Approve</button>\n                        <button onClick={() => handleReject(app._id)}>Reject</button>\n                        {/* Download Resume button */}\n                        <button onClick={() => downloadResume(app.resume)}>Download Resume</button>\n                    </div>\n                ))\n            ) : (\n                <p>No pending applications found.</p> // Message when no pending applications are available\n            )}\n    \n          \n        </div>\n    );\n};\n\nexport default ApproverDashboard; // Move this line outside of the return statement"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}